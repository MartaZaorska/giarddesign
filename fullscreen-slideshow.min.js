const createFullscreenSlideshow=(()=>{const t=document.createElement("template");t.innerHTML='\n    <style>\n      .container, .container * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n        border: 0;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      .container {\n        --background: rgb(18 24 31);\n        --color: #eee;\n        --controlsDisplay: flex;\n        display: none;\n        position: fixed;\n        inset: 0;\n        z-index: 100;\n        height: 100vh;\n        background: var(--background);\n        color: var(--color);\n      }\n\n      .open {\n        display: flex;\n      }\n\n      .container button {\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        color: inherit;\n        opacity: 0.8;\n        -webkit-tap-highlight-color: transparent;\n        outline: none;\n        font-family: inherit;\n      }\n\n      .container button:active,\n      .container button:focus {\n        outline: none;\n        -webkit-tap-highlight-color: transparent;\n      }\n\n      .container button:hover {\n        opacity: 1;\n      }\n\n      .close {\n        position: absolute;\n        top: 1em;\n        right: 1em;\n        z-index: 100;\n        width: 20px;\n        height: 20px;\n        transform: scale(0.95);\n        transition: all 0.1s;\n      }\n\n      .close span, .close span::after {\n        content: "";\n        display: block;\n        width: 100%;\n        height: 2px;\n        border-radius: 1px;\n        background: var(--color);\n      }\n\n      .close span {\n        transform: rotate(45deg);\n      }\n\n      .close span::after {\n        transform: rotate(-90deg);\n      }\n\n      .close:hover {\n        transform: scale(1);\n      }\n\n      .controls {\n        position: fixed;\n        z-index: 60;\n        bottom: 1.8em;\n        right: 5em;\n        display: none;\n      }\n\n      .controls button {\n        margin-inline: 0.2em;\n        width: 30px;\n        height: 30px;\n        transform: scale(0.75);\n      }\n\n      .controls button:hover {\n        transform: scale(0.85);\n      }\n\n      .content {\n        margin: auto;\n        display: inline-flex;\n        scrollbar-width: none;\n        height: 100vh;\n        transform: translateX(0);\n        will-change: transform;\n        transition: all 0.36s cubic-bezier(0, 0, 0, 1);\n        z-index: 50;\n      }\n\n      .item  {\n        width: 100vw;\n        height: auto;\n        display: flex;\n        overflow: hidden;\n        transition: all 0.07s ease;\n      }\n\n      .item img {\n        height: fit-content;\n        width: fit-content;\n        max-width: 100vw;\n        max-height: 100vh;\n        margin: auto;\n        transform: scale(0.9);\n        transition: all 0.2s ease-out;\n        pointer-events: none;\n      }\n\n      .text {\n        display: none;\n        color: inherit;\n        font-size: 0.8em;\n        font-weight: bold;\n        padding: 1em 0.5em;\n        text-transform: lowercase;\n        pointer-events: none;\n      }\n\n      .number {\n        font-weight: normal;\n        margin-right: 0.5em;\n      }\n\n      @media screen and (min-width: 992px){\n        .content {\n          height: 70vh;\n          transition: all 0.3s ease-out;\n        }\n\n        .item {\n          height: 100%;\n          max-height: 68vh;\n          width: auto;\n          max-width: 90vw;\n          display: block;\n          overflow: visible;\n          transition: all 0.2s;\n        }\n\n        .item img {\n          height: 100%;\n          width: auto;\n          max-height: 68vh;\n          transform: scale(1);\n          filter: blur(3px) grayscale(80%);\n          opacity: 0.3;\n          transition: all 0.2s;\n        }\n\n        .active {\n          z-index: 10;\n          box-shadow: 0px 20px 30px -18px rgba(0,0,0,0.5);\n          transform: scale(1.1);\n        }\n\n        .active .text {\n          display: flex;\n        }\n\n        .active img {\n          filter: none;\n          opacity: 1;\n        }\n\n        .controls {\n          display: var(--controlsDisplay);\n        }\n      }\n\n      @media screen and (min-width: 992px) and (max-height: 500px){\n        .content {\n          height: 50vh;\n        }\n\n        .item {\n          max-height: 48vh;\n        }\n\n        .item img {\n          max-height: 48vh;\n        }\n      }\n    </style>\n\n    <div class="container">\n      <button class="close"><span></span></button>\n      <div class="content"></div>\n      <div class="controls">\n        <button class="prev">\n          <svg width="30px" height="30px">\n            <line x1="3" y1="15" x2="27" y2="15" stroke-linecap="round" stroke="black" stroke-width="2"></line>\n            <line x1="3" y1="15" x2="12" y2="7" stroke-linecap="round" stroke="black" stroke-width="2"></line>\n            <line x1="3" y1="15" x2="12" y2="23" stroke-linecap="round" stroke="black" stroke-width="2"></line>\n          </svg>\n        </button>\n        <button class="next">\n          <svg width="30px" height="30px">\n            <line x1="3" y1="15" x2="27" y2="15" stroke-linecap="round" stroke="#eee" stroke-width="2"></line>\n            <line x1="27" y1="15" x2="19" y2="7" stroke-linecap="round" stroke="#eee" stroke-width="2"></line>\n            <line x1="27" y1="15" x2="19" y2="23" stroke-linecap="round" stroke="#eee" stroke-width="2"></line>\n          </svg>\n        </button>\n      </div>\n    </div>\n  ';class n extends HTMLElement{constructor(n,e){super(),this.data=n,this.options={background:"rgb(18 24 31)",fontColor:"#eee",controls:!0,displayText:"tags",displayNumeration:!0,...e},this.activeIndex=0,this.prevTranslate=0,this.touchesEventData={isDragging:!1,startPosition:0,currentPosition:0},this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.updateStyleProperty(),this.create()}updateStyleProperty(){this.shadowRoot.querySelector(".container").style.setProperty("--background",this.options.background),this.shadowRoot.querySelector(".container").style.setProperty("--color",this.options.fontColor),this.shadowRoot.querySelector(".container").style.setProperty("--controlsDisplay",this.options.controls?"flex":"none"),this.shadowRoot.querySelectorAll(".controls line").forEach((t=>t.setAttribute("stroke",this.options.fontColor)))}getText(t){if("name"===this.options.displayText&&t.hasOwnProperty("name"))return t.name;if(!t.hasOwnProperty("tags"))return"";if(!Array.isArray(t.tags)&&"string"!=typeof t.tags)return"";return(Array.isArray(t.tags)?t.tags:[t.tags]).reduce(((t,n)=>t+(""===n?"":` #${n.toLowerCase().split(" ").join("")}`)),"")}create(){const t=this.shadowRoot.querySelector(".content");t.innerHTML="",this.data.forEach(((n,e)=>{const i=document.createElement("div");i.classList.add("item"),i.setAttribute("data-index",e);const o=document.createElement("p");o.classList.add("text");const s=this.getText(n);this.options.displayNumeration&&(o.innerHTML+=`<span class="number">${e+1}/${this.data.length}</span>`),this.options.displayText&&(o.innerHTML+=`<span class="name">${s}</span>`);const a=document.createElement("img");a.src=n.url,a.alt=s,i.appendChild(a),i.appendChild(o),i.addEventListener("touchstart",this.touchStartHandler),i.addEventListener("touchmove",this.touchMoveHandler),i.addEventListener("touchend",this.touchEndHandler),i.addEventListener("click",this.clickItemHandler),t.appendChild(i)})),this.shadowRoot.querySelector(".close").addEventListener("click",this.closeHandler),this.options.controls&&(this.shadowRoot.querySelector(".prev").addEventListener("click",this.prevItemHandler),this.shadowRoot.querySelector(".next").addEventListener("click",this.nextItemHandler))}displayActive=()=>{this.shadowRoot.querySelector(".active")?.classList.remove("active");const t=this.shadowRoot.querySelector(`div[data-index="${this.activeIndex}"]`);if(!t)return this.activeIndex=0,void this.displayActive();t.classList.add("active");const n=(window.innerWidth-t.getBoundingClientRect().width)/2-t.getBoundingClientRect().left;this.shadowRoot.querySelector(".content").style.transform=`translateX(${this.prevTranslate+n}px)`,this.prevTranslate+=n};open(t=0){this.shadowRoot.querySelector(".item")||this.create(),this.activeIndex=t<0||t>=this.data.length?0:t,this.shadowRoot.querySelector(".container").classList.add("open"),this.displayActive(),window.addEventListener("keyup",this.keyUpHandler),window.addEventListener("resize",this.displayActive)}close(){this.shadowRoot.querySelector(".container").classList.remove("open"),this.shadowRoot.querySelector(".content").style.transform="translateX(0px)",this.prevTranslate=0,this.activeIndex=0,this.touchesEventData.isDragging=!1,this.touchesEventData.currentPosition=0,this.touchesEventData.startPosition=0,window.removeEventListener("keyup",this.keyUpHandler),window.removeEventListener("resize",this.displayActive)}update(t,n){this.close(),t?.length>0&&(t.forEach((t=>{if("string"!=typeof t?.url)throw new Error('Invalid argument: each element in data should have the property "url" (path to the image).')})),this.data=t),this.options={...this.options,...n},this.updateStyleProperty(),this.create()}touchStartHandler=t=>{this.touchesEventData.startPosition=t.touches[0].clientX,this.touchesEventData.isDragging=!0};touchMoveHandler=t=>{this.touchesEventData.isDragging&&(this.touchesEventData.currentPosition=t.touches[0].clientX)};touchEndHandler=()=>{this.touchesEventData.isDragging=!1;const t=this.touchesEventData.startPosition-this.touchesEventData.currentPosition;t>50&&this.activeIndex<this.data.length-1?this.activeIndex+=1:t<-50&&this.activeIndex>0&&(this.activeIndex-=1),this.touchesEventData.startPosition=0,this.touchesEventData.currentPosition=0,this.displayActive()};clickItemHandler=t=>{t.target.classList.contains("active")||(this.activeIndex=+t.target.getAttribute("data-index"),this.displayActive())};keyUpHandler=t=>{"ArrowRight"===t.code?this.nextItemHandler():"ArrowLeft"===t.code?this.prevItemHandler():"Escape"===t.code&&this.close()};prevItemHandler=()=>{this.activeIndex=0===this.activeIndex?this.data.length-1:this.activeIndex-1,this.displayActive()};nextItemHandler=()=>{this.activeIndex=this.activeIndex===this.data.length-1?0:this.activeIndex+1,this.displayActive()};openHandler=(t=0)=>this.open(t);closeHandler=()=>this.close();updateHandler=(t=[],n={})=>this.update(t,n)}return window.customElements.define("fullscreen-slideshow",n),function(t=[],e={}){t.forEach((t=>{if("string"!=typeof t?.url)throw new Error('Invalid argument: each element in data should have the property "url" (path to the image).')}));const i=new n(t,e);return document.body.appendChild(i),{open:i.openHandler,close:i.closeHandler,update:i.updateHandler}}})();